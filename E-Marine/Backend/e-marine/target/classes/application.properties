spring.application.name=e-marine

# ===============================
# = SERVER CONFIGURATION =
# ===============================
server.port=8080

# ===============================
# = DATABASE CONFIGURATION =
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/boat_monitoring
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Automatically create/update tables based on entities
spring.jpa.hibernate.ddl-auto=update

# Show SQL in console (optional)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Naming strategy (optional for consistent column naming)
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# ===============================
# = CORS CONFIG (for React frontend) =
# ===============================
# Optionally configure this in a WebMvcConfigurer class for more control
# spring.web.cors.allowed-origins=http://localhost:3000

# ===============================
# = LOGGING =
# ===============================
logging.level.org.springframework=INFO
logging.level.org.hibernate.SQL=DEBUG